app:
  telegram-token: ${TELEGRAM_TOKEN}
  scrapper: "http://localhost:8080/v0/chats"

kafka:
  bootstrap-servers: localhost:9092
  topic-dlq: Topic1_dlq
  scrapper-topic:
    name: Topic1
  group-id: bot-group

springdoc:
  swagger-ui:
    path: /swagger-ui.html

spring:
  application:
    name: bot
  metrics:
    tags:
      application: "${spring.application.name}"
  jackson:
    time-zone: UTC
  cache:
    cache-names:
      - rate-limit-buckets
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s

bucket4j:
  enabled: true
  filters:
    - filter-method: servlet
    - cache-name: ip-rate-limit
      url: .*
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
      strategy: first
      rate-limits:
        - bandwidths:
            - capacity: 20
              time: 1
              unit: minutes

management:
  server:
    port: 8081
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: [ "info", "health", "prometheus" ]
      path-mapping:
        prometheus: "metrics"

server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml
