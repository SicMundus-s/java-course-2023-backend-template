/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq.tables.pojos;


import edu.java.scrapper.domain.jooq.enums.ResourceType;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Links implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String url;
    private OffsetDateTime updatedAt;
    private OffsetDateTime lastCheck;
    private ResourceType resourceType;
    private OffsetDateTime githubUpdatedAt;
    private OffsetDateTime stackoverflowLastEditDateQuestion;

    public Links() {}

    public Links(Links value) {
        this.id = value.id;
        this.url = value.url;
        this.updatedAt = value.updatedAt;
        this.lastCheck = value.lastCheck;
        this.resourceType = value.resourceType;
        this.githubUpdatedAt = value.githubUpdatedAt;
        this.stackoverflowLastEditDateQuestion = value.stackoverflowLastEditDateQuestion;
    }

    @ConstructorProperties({ "id", "url", "updatedAt", "lastCheck", "resourceType", "githubUpdatedAt", "stackoverflowLastEditDateQuestion" })
    public Links(
        @Nullable Long id,
        @NotNull String url,
        @Nullable OffsetDateTime updatedAt,
        @Nullable OffsetDateTime lastCheck,
        @NotNull ResourceType resourceType,
        @Nullable OffsetDateTime githubUpdatedAt,
        @Nullable OffsetDateTime stackoverflowLastEditDateQuestion
    ) {
        this.id = id;
        this.url = url;
        this.updatedAt = updatedAt;
        this.lastCheck = lastCheck;
        this.resourceType = resourceType;
        this.githubUpdatedAt = githubUpdatedAt;
        this.stackoverflowLastEditDateQuestion = stackoverflowLastEditDateQuestion;
    }

    /**
     * Getter for <code>LINKS.ID</code>.
     */
    @Nullable
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>LINKS.ID</code>.
     */
    public void setId(@Nullable Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>LINKS.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINKS.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINKS.UPDATED_AT</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>LINKS.UPDATED_AT</code>.
     */
    public void setUpdatedAt(@Nullable OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>LINKS.LAST_CHECK</code>.
     */
    @Nullable
    public OffsetDateTime getLastCheck() {
        return this.lastCheck;
    }

    /**
     * Setter for <code>LINKS.LAST_CHECK</code>.
     */
    public void setLastCheck(@Nullable OffsetDateTime lastCheck) {
        this.lastCheck = lastCheck;
    }

    /**
     * Getter for <code>LINKS.RESOURCE_TYPE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public ResourceType getResourceType() {
        return this.resourceType;
    }

    /**
     * Setter for <code>LINKS.RESOURCE_TYPE</code>.
     */
    public void setResourceType(@NotNull ResourceType resourceType) {
        this.resourceType = resourceType;
    }

    /**
     * Getter for <code>LINKS.GITHUB_UPDATED_AT</code>.
     */
    @Nullable
    public OffsetDateTime getGithubUpdatedAt() {
        return this.githubUpdatedAt;
    }

    /**
     * Setter for <code>LINKS.GITHUB_UPDATED_AT</code>.
     */
    public void setGithubUpdatedAt(@Nullable OffsetDateTime githubUpdatedAt) {
        this.githubUpdatedAt = githubUpdatedAt;
    }

    /**
     * Getter for <code>LINKS.STACKOVERFLOW_LAST_EDIT_DATE_QUESTION</code>.
     */
    @Nullable
    public OffsetDateTime getStackoverflowLastEditDateQuestion() {
        return this.stackoverflowLastEditDateQuestion;
    }

    /**
     * Setter for <code>LINKS.STACKOVERFLOW_LAST_EDIT_DATE_QUESTION</code>.
     */
    public void setStackoverflowLastEditDateQuestion(@Nullable OffsetDateTime stackoverflowLastEditDateQuestion) {
        this.stackoverflowLastEditDateQuestion = stackoverflowLastEditDateQuestion;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Links other = (Links) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.lastCheck == null) {
            if (other.lastCheck != null)
                return false;
        }
        else if (!this.lastCheck.equals(other.lastCheck))
            return false;
        if (this.resourceType == null) {
            if (other.resourceType != null)
                return false;
        }
        else if (!this.resourceType.equals(other.resourceType))
            return false;
        if (this.githubUpdatedAt == null) {
            if (other.githubUpdatedAt != null)
                return false;
        }
        else if (!this.githubUpdatedAt.equals(other.githubUpdatedAt))
            return false;
        if (this.stackoverflowLastEditDateQuestion == null) {
            if (other.stackoverflowLastEditDateQuestion != null)
                return false;
        }
        else if (!this.stackoverflowLastEditDateQuestion.equals(other.stackoverflowLastEditDateQuestion))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.lastCheck == null) ? 0 : this.lastCheck.hashCode());
        result = prime * result + ((this.resourceType == null) ? 0 : this.resourceType.hashCode());
        result = prime * result + ((this.githubUpdatedAt == null) ? 0 : this.githubUpdatedAt.hashCode());
        result = prime * result + ((this.stackoverflowLastEditDateQuestion == null) ? 0 : this.stackoverflowLastEditDateQuestion.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Links (");

        sb.append(id);
        sb.append(", ").append(url);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(lastCheck);
        sb.append(", ").append(resourceType);
        sb.append(", ").append(githubUpdatedAt);
        sb.append(", ").append(stackoverflowLastEditDateQuestion);

        sb.append(")");
        return sb.toString();
    }
}
